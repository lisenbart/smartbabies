#!/usr/bin/env python3
"""
–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è OAuth –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –¥–ª—è YouTube API
–ü–æ—Ç—Ä—ñ–±–Ω–æ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –º–µ—Ç–∞–¥–∞–Ω–∏—Ö –≤—ñ–¥–µ–æ
"""

import os
import pickle
from google_auth_oauthlib.flow import InstalledAppFlow
from google.auth.transport.requests import Request
from googleapiclient.discovery import build
from dotenv import load_dotenv

load_dotenv()

# Scope –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –≤—ñ–¥–µ–æ
SCOPES = ['https://www.googleapis.com/auth/youtube.force-ssl']

def get_credentials():
    """
    –û—Ç—Ä–∏–º—É—î –≤–∞–ª—ñ–¥–Ω—ñ credentials –¥–ª—è YouTube API.
    –°—Ç–≤–æ—Ä—é—î OAuth flow —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ.
    """
    creds = None
    token_file = 'token.pickle'
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —î –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π —Ç–æ–∫–µ–Ω
    if os.path.exists(token_file):
        with open(token_file, 'rb') as token:
            creds = pickle.load(token)
    
    # –Ø–∫—â–æ –Ω–µ–º–∞—î –≤–∞–ª—ñ–¥–Ω–∏—Ö credentials, –∑–∞–ø—É—Å–∫–∞—î–º–æ OAuth flow
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            if not os.path.exists('client_secret.json'):
                print("‚ùå –ü–æ–º–∏–ª–∫–∞: –§–∞–π–ª client_secret.json –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
                print("\nüìù –©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ client_secret.json:")
                print("1. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ https://console.cloud.google.com/")
                print("2. –í–∏–±–µ—Ä—ñ—Ç—å –≤–∞—à –ø—Ä–æ–µ–∫—Ç")
                print("3. APIs & Services ‚Üí Credentials")
                print("4. Create Credentials ‚Üí OAuth client ID")
                print("5. Application type: Desktop app")
                print("6. –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ JSON —Ñ–∞–π–ª —Ç–∞ –ø–µ—Ä–µ–π–º–µ–Ω—É–π—Ç–µ –≤ client_secret.json")
                return None
            
            flow = InstalledAppFlow.from_client_secrets_file(
                'client_secret.json', SCOPES)
            creds = flow.run_local_server(port=0)
        
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ credentials –¥–ª—è –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
        with open(token_file, 'wb') as token:
            pickle.dump(creds, token)
    
    return creds

def get_youtube_service():
    """–ü–æ–≤–µ—Ä—Ç–∞—î –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π YouTube —Å–µ—Ä–≤—ñ—Å"""
    creds = get_credentials()
    if not creds:
        return None
    return build('youtube', 'v3', credentials=creds)

if __name__ == '__main__':
    print("üîê –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è OAuth –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó...")
    print("\n–ü–µ—Ä–µ–≤—ñ—Ä—è—é –Ω–∞—è–≤–Ω—ñ—Å—Ç—å client_secret.json...")
    
    if not os.path.exists('client_secret.json'):
        print("\n‚ùå –§–∞–π–ª client_secret.json –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
        print("\nüìã –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è:")
        print("="*70)
        print("""
1. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ https://console.cloud.google.com/
2. –í–∏–±–µ—Ä—ñ—Ç—å –≤–∞—à –ø—Ä–æ–µ–∫—Ç (—Ç–æ–π —Å–∞–º–∏–π –¥–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ API –∫–ª—é—á)
3. –ü–µ—Ä–µ–π–¥—ñ—Ç—å: APIs & Services ‚Üí Credentials
4. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "Create Credentials" ‚Üí "OAuth client ID"
5. –Ø–∫—â–æ –ø—Ä–æ—Å–∏—Ç–∏–º–µ —Å—Ç–≤–æ—Ä–∏—Ç–∏ OAuth consent screen:
   - User Type: External
   - App name: SmartBabies Optimizer
   - User support email: –≤–∞—à email
   - Developer email: –≤–∞—à email
   - Save and Continue (scopes –ø—Ä–æ–ø—É—Å—Ç—ñ—Ç—å)
   - Save and Continue (test users –ø—Ä–æ–ø—É—Å—Ç—ñ—Ç—å)
   - Back to Dashboard

6. –ü–æ–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ Credentials ‚Üí Create Credentials ‚Üí OAuth client ID
7. Application type: Desktop app
8. Name: SmartBabies Desktop Client
9. Create
10. –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ JSON —Ñ–∞–π–ª
11. –ü–µ—Ä–µ–π–º–µ–Ω—É–π—Ç–µ –π–æ–≥–æ –≤ client_secret.json
12. –ü–æ–∫–ª–∞–¥—ñ—Ç—å –≤ –ø–∞–ø–∫—É youtube-optimizer/
        """)
        print("="*70)
    else:
        print("‚úÖ client_secret.json –∑–Ω–∞–π–¥–µ–Ω–æ!")
        print("\nüîê –ó–∞–ø—É—Å–∫–∞—é –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—é...")
        print("–í—ñ–¥–∫—Ä–∏—î—Ç—å—Å—è –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó...")
        
        service = get_youtube_service()
        if service:
            print("\n‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!")
            print("‚úÖ –¢–æ–∫–µ–Ω –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ token.pickle")
            print("\n–¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ update_videos.py –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–µ–æ!")


