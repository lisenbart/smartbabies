#!/usr/bin/env python3
"""
–û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –º–µ—Ç–∞–¥–∞–Ω–∏—Ö YouTube –∫–∞–Ω–∞–ª—É
–§–æ–∫—É—Å: –ó–±—ñ–ª—å—à–µ–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤ —Ç–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è –≤ —Ç–æ–ø –ø–æ—à—É–∫—É
"""

import os
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError
from dotenv import load_dotenv
from auth_setup import get_youtube_service

load_dotenv()

# Channel ID –¥–ª—è SmartBabies
CHANNEL_ID = 'UCPBKtZdTxxqxU3c8iR44uhw'

def get_optimized_channel_description():
    """–ì–µ–Ω–µ—Ä—É—î –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–π –æ–ø–∏—Å –∫–∞–Ω–∞–ª—É –¥–ª—è SEO —Ç–∞ –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤"""
    
    description = """üõ∏ SmartBabies¬Æ - Preschool Educational Content | Learn with ScoopyCap

Welcome to SmartBabies! We create safe, engaging, and educational videos for preschoolers and toddlers (ages 2-5). Join our friendly space explorer ScoopyCap on fun learning adventures!

üéØ WHAT WE OFFER:
‚Ä¢ üìö ABC & Alphabet Learning
‚Ä¢ üî¢ Numbers & Counting
‚Ä¢ üé® Colors & Shapes Recognition
‚Ä¢ üéµ Nursery Rhymes & Kids Songs
‚Ä¢ üõ∏ Adventure Stories with ScoopyCap
‚Ä¢ üåü Safe, Age-Appropriate Content

üë∂ PERFECT FOR:
‚Ä¢ Toddlers (2-3 years)
‚Ä¢ Preschoolers (3-5 years)
‚Ä¢ Parents looking for educational content
‚Ä¢ Early childhood educators

‚ú® WHY SUBSCRIBE:
‚úÖ New educational videos every week
‚úÖ Safe, ad-free viewing experience
‚úÖ Bilingual content (English, Ukrainian, Polish)
‚úÖ Award-winning animation director
‚úÖ Evidence-based learning approaches

üì∫ POPULAR PLAYLISTS:
üéµ Songs & Music: Best Nursery Rhymes Collection
üî§ Learning ABC: Alphabet & Phonics Series
üé® Colors & Shapes: Visual Learning Adventures
üõ∏ ScoopyCap Adventures: Fun Stories for Kids

üîó CONNECT WITH US:
YouTube: /@SmartBabies
Facebook: /Smart-Babies-108947580525633

üìß Business Inquiries: smartbabies.app@gmail.com

üéì Created by award-winning animation director Dmytro Lisenbart
Over 30+ years of experience in children's content production

#KidsEducation #PreschoolLearning #SmartBabies #ScoopyCap #ToddlerEducation #KidsLearning #EducationalVideos #PreschoolContent #SafeKidsContent #NurseryRhymes #KidsSongs #LearnABC #PreschoolVideos #KidsContent #EarlyLearning #ToddlerVideos #KidsEntertainment #EducationalContent #PreschoolActivities #KidsShows"""
    
    return description

def get_optimized_channel_keywords():
    """–û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω—ñ –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ –¥–ª—è –∫–∞–Ω–∞–ª—É"""
    keywords = [
        'SmartBabies',
        'ScoopyCap',
        'preschool education',
        'toddler learning',
        'educational videos for kids',
        'kids content',
        'preschool activities',
        'early learning',
        'children education',
        'safe kids content',
        'nursery rhymes',
        'kids songs',
        'alphabet learning',
        'numbers for kids',
        'colors for toddlers',
        'preschool videos',
        'educational cartoons',
        'kids animation',
        'toddler content',
        'preschool curriculum',
        'early childhood education',
        'bilingual education',
        'ukrainian kids content',
        'polish kids videos'
    ]
    return ','.join(keywords)

def get_channel_branding_recommendations():
    """–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∫–∞–Ω–∞–ª—É"""
    recommendations = {
        'channel_art': {
            'title': 'Banner (Channel Art)',
            'recommendations': [
                '–†–æ–∑–º—ñ—Ä: 2560x1440 –ø—ñ–∫—Å–µ–ª—ñ–≤',
                '–í–∫–ª—é—á–∏—Ç–∏: ScoopyCap, –Ω–∞–∑–≤—É SmartBabies, –µ–º–æ–¥–∑—ñ',
                '–ö–æ–ª—å–æ—Ä–∏: —è—Å–∫—Ä–∞–≤—ñ, –ø—Ä–∏–≤–∞–±–ª–∏–≤—ñ –¥–ª—è –¥—ñ—Ç–µ–π',
                '–¢–µ–∫—Å—Ç: "Learn & Play with SmartBabies"',
                'Call-to-action: "Subscribe for new videos!"'
            ]
        },
        'profile_picture': {
            'title': 'Profile Picture',
            'recommendations': [
                '–†–æ–∑–º—ñ—Ä: 800x800 –ø—ñ–∫—Å–µ–ª—ñ–≤ (–∫—Ä—É–≥–ª–µ)',
                '–í–∫–ª—é—á–∏—Ç–∏: ScoopyCap –∞–±–æ –ª–æ–≥–æ—Ç–∏–ø SmartBabies',
                '–ß—ñ—Ç–∫–∏–π –Ω–∞ –º–∞–ª–µ–Ω—å–∫–æ–º—É —Ä–æ–∑–º—ñ—Ä—ñ',
                '–£–∑–≥–æ–¥–∂–µ–Ω–∏–π –∑ –±—Ä–µ–Ω–¥–∏–Ω–≥–æ–º'
            ]
        },
        'video_watermark': {
            'title': 'Video Watermark (Subscribe Button)',
            'recommendations': [
                '–î–æ–¥–∞—Ç–∏ subscribe watermark –Ω–∞ –≤—Å—ñ –≤—ñ–¥–µ–æ',
                '–ü–æ–∑–∏—Ü—ñ—è: –Ω–∏–∂–Ω—ñ–π –ø—Ä–∞–≤–∏–π –∫—É—Ç',
                '–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ –∑ 10-—ó —Å–µ–∫—É–Ω–¥–∏',
                '–ß—ñ—Ç–∫–∏–π —Ç–∞ –Ω–µ –Ω–∞–≤\'—è–∑–ª–∏–≤–∏–π'
            ]
        },
        'sections': {
            'title': 'Channel Sections (Playlists –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π)',
            'recommendations': [
                '–í–µ—Ä—Ö–Ω—ñ–π —Ä–æ–∑–¥—ñ–ª: "Popular Videos" (5-10 –Ω–∞–π–∫—Ä–∞—â–∏—Ö)',
                '–î—Ä—É–≥–∏–π: "Songs & Music Playlist"',
                '–¢—Ä–µ—Ç—ñ–π: "ABC Learning Series"',
                '–ß–µ—Ç–≤–µ—Ä—Ç–∏–π: "Newest Videos"',
                '–ü\'—è—Ç–∏–π: "ScoopyCap Adventures"'
            ]
        }
    }
    return recommendations

def update_channel_metadata(youtube, preview_mode=True):
    """–û–Ω–æ–≤–ª—é—î –º–µ—Ç–∞–¥–∞–Ω—ñ –∫–∞–Ω–∞–ª—É"""
    try:
        # –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –∫–∞–Ω–∞–ª—É
        request = youtube.channels().list(
            part='snippet',
            id=CHANNEL_ID
        )
        response = request.execute()
        
        if not response['items']:
            print("‚ùå –ö–∞–Ω–∞–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
            return False
        
        channel = response['items'][0]
        snippet = channel['snippet']
        
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
        current_desc = snippet.get('description', '')
        current_keywords = snippet.get('keywords', '')
        
        # –ù–æ–≤—ñ –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
        new_description = get_optimized_channel_description()
        new_keywords = get_optimized_channel_keywords()
        
        print("\n" + "="*70)
        print("üìä –ê–ù–ê–õ–Ü–ó –ü–û–¢–û–ß–ù–û–ì–û –û–§–û–†–ú–õ–ï–ù–ù–Ø –ö–ê–ù–ê–õ–£")
        print("="*70)
        
        print(f"\nüìù –û–ü–ò–° –ö–ê–ù–ê–õ–£:")
        print(f"   –ü–æ—Ç–æ—á–Ω–∏–π: {len(current_desc)} —Å–∏–º–≤–æ–ª—ñ–≤")
        print(f"   –ù–æ–≤–∏–π: {len(new_description)} —Å–∏–º–≤–æ–ª—ñ–≤")
        print(f"   –†—ñ–∑–Ω–∏—Ü—è: {len(new_description) - len(current_desc)} —Å–∏–º–≤–æ–ª—ñ–≤")
        
        if len(current_desc) < 200:
            print("   ‚ö†Ô∏è  –ü–æ—Ç–æ—á–Ω–∏–π –æ–ø–∏—Å –∑–∞–Ω–∞–¥—Ç–æ –∫–æ—Ä–æ—Ç–∫–∏–π –¥–ª—è SEO (—Ä–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è 200+ —Å–∏–º–≤–æ–ª—ñ–≤)")
        
        print(f"\nüè∑Ô∏è  –ö–õ–Æ–ß–û–í–Ü –°–õ–û–í–ê:")
        print(f"   –ü–æ—Ç–æ—á–Ω—ñ: {len(current_keywords.split(',')) if current_keywords else 0} –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤")
        print(f"   –ù–æ–≤—ñ: {len(new_keywords.split(','))} –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤")
        
        # –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
        improvements = []
        if len(new_description) > len(current_desc):
            improvements.append(f"‚úÖ –û–ø–∏—Å —Ä–æ–∑—à–∏—Ä–µ–Ω–æ –Ω–∞ {len(new_description) - len(current_desc)} —Å–∏–º–≤–æ–ª—ñ–≤")
        if len(new_keywords.split(',')) > len(current_keywords.split(',')) if current_keywords else True:
            improvements.append("‚úÖ –î–æ–¥–∞–Ω–æ –±—ñ–ª—å—à–µ –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤")
        if 'ScoopyCap' not in current_desc:
            improvements.append("‚úÖ –î–æ–¥–∞–Ω–æ –∑–≥–∞–¥–∫—É –ø—Ä–æ ScoopyCap (–±—Ä–µ–Ω–¥)")
        if 'Subscribe' not in current_desc:
            improvements.append("‚úÖ –î–æ–¥–∞–Ω–æ call-to-action –¥–ª—è –ø—ñ–¥–ø–∏—Å–∫–∏")
        
        if improvements:
            print(f"\n‚ú® –ü–û–ö–†–ê–©–ï–ù–ù–Ø:")
            for imp in improvements:
                print(f"   {imp}")
        
        # –ü–æ–∫–∞–∑—É—î–º–æ –Ω–æ–≤–∏–π –æ–ø–∏—Å
        print(f"\nüìÑ –ù–û–í–ò–ô –û–ü–ò–° –ö–ê–ù–ê–õ–£ (–ø–µ—Ä—à—ñ 500 —Å–∏–º–≤–æ–ª—ñ–≤):")
        print("-"*70)
        print(new_description[:500] + "...")
        print("-"*70)
        
        if not preview_mode:
            print("\nüîÑ –û–Ω–æ–≤–ª—é—é –º–µ—Ç–∞–¥–∞–Ω—ñ –∫–∞–Ω–∞–ª—É...")
            snippet['description'] = new_description
            snippet['keywords'] = new_keywords
            snippet['defaultLanguage'] = 'en'
            
            update_request = youtube.channels().update(
                part='snippet',
                body={
                    'id': CHANNEL_ID,
                    'snippet': snippet
                }
            )
            update_request.execute()
            print("‚úÖ –ö–∞–Ω–∞–ª —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!")
            return True
        else:
            print("\n‚ö†Ô∏è  –†–ï–ñ–ò–ú –ü–†–ï–í'–Æ: –ù—ñ—á–æ–≥–æ –Ω–µ –∑–º—ñ–Ω–µ–Ω–æ")
            print("–î–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω –∑–∞–ø—É—Å—Ç—ñ—Ç—å –∑ --apply")
            return True
        
    except HttpError as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        if e.resp.status == 403:
            print("‚ö†Ô∏è  –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø—É OAuth —Ç–æ–∫–µ–Ω—É")
        return False

def print_branding_recommendations():
    """–í–∏–≤–æ–¥–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è"""
    recommendations = get_channel_branding_recommendations()
    
    print("\n" + "="*70)
    print("üé® –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á –ó –û–§–û–†–ú–õ–ï–ù–ù–Ø –ö–ê–ù–ê–õ–£")
    print("="*70)
    
    for key, rec in recommendations.items():
        print(f"\n{rec['title']}:")
        for item in rec['recommendations']:
            print(f"  ‚Ä¢ {item}")

def print_seo_recommendations():
    """–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è SEO —Ç–∞ –ø–æ—à—É–∫–æ–≤–æ—ó –≤–∏–¥–∏–º–æ—Å—Ç—ñ"""
    print("\n" + "="*70)
    print("üîç –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á –î–õ–Ø –ü–û–®–£–ö–û–í–û–á –í–ò–î–ò–ú–û–°–¢–Ü")
    print("="*70)
    
    recommendations = [
        "1. –ö–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ –≤ –Ω–∞–∑–≤—ñ –∫–∞–Ω–∞–ª—É: 'SmartBabies Preschool Education'",
        "2. –°—Ç–≤–æ—Ä—ñ—Ç—å –∫–∞—Å—Ç–æ–º–Ω–∏–π URL: youtube.com/@SmartBabies (–≤–∂–µ —î)",
        "3. –î–æ–¥–∞–π—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é: Education",
        "4. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ –≤ –Ω–∞–∑–≤–∞—Ö –ø–ª–µ–π–ª–∏—Å—Ç—ñ–≤",
        "5. –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–Ω–æ–≤–ª—é–π—Ç–µ Featured Video –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π",
        "6. –°—Ç–≤–æ—Ä—ñ—Ç—å –ø—ñ–Ω—ñ—Ä–æ–≤–∞–Ω–∏–π –∫–æ–º–µ–Ω—Ç–∞—Ä –∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –Ω–∞ –Ω–∞–π–∫—Ä–∞—â—ñ –≤—ñ–¥–µ–æ",
        "7. –î–æ–¥–∞–π—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∫–∞–Ω–∞–ª –≤ –æ–ø–∏—Å—ñ –∫–æ–∂–Ω–æ–≥–æ –≤—ñ–¥–µ–æ",
        "8. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –æ–¥–Ω–∞–∫–æ–≤—ñ —Ö–µ—à—Ç–µ–≥–∏ –≤ –æ–ø–∏—Å—ñ –∫–∞–Ω–∞–ª—É —Ç–∞ –≤—ñ–¥–µ–æ"
    ]
    
    for rec in recommendations:
        print(f"  {rec}")

def print_subscriber_growth_strategies():
    """–°—Ç—Ä–∞—Ç–µ–≥—ñ—ó –¥–ª—è –∑–±—ñ–ª—å—à–µ–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤"""
    print("\n" + "="*70)
    print("üë• –°–¢–†–ê–¢–ï–ì–Ü–á –î–õ–Ø –ó–ë–Ü–õ–¨–®–ï–ù–ù–Ø –ü–Ü–î–ü–ò–°–ù–ò–ö–Ü–í")
    print("="*70)
    
    strategies = [
        {
            'title': '1. Call-to-Action –≤ –≤—ñ–¥–µ–æ',
            'tips': [
                '–ü—Ä–æ—Å–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—å –≤ –ø–µ—Ä—à—ñ 15 —Å–µ–∫—É–Ω–¥ (–∫–æ–ª–∏ –Ω–∞–π–±—ñ–ª—å—à–∞ —É–≤–∞–≥–∞)',
                '–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤—ñ–∑—É–∞–ª—å–Ω—ñ –ø—ñ–¥–∫–∞–∑–∫–∏ (subscribe button animation)',
                '–ó–≥–∞–¥—É–≤–∞—Ç–∏ –ø–µ—Ä–µ–≤–∞–≥–∏ –ø—ñ–¥–ø–∏—Å–∫–∏: "New videos every week!"'
            ]
        },
        {
            'title': '2. –ï–Ω–¥—Å–∫—Ä—ñ–Ω–∏ (End Screens)',
            'tips': [
                '–î–æ–¥–∞—Ç–∏ end screen –Ω–∞ –≤—Å—ñ –≤—ñ–¥–µ–æ',
                '–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ —ñ–Ω—à—ñ –≤—ñ–¥–µ–æ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É',
                '–î–æ–¥–∞—Ç–∏ subscribe button –≤ end screen'
            ]
        },
        {
            'title': '3. –ü–µ—Ä–µ—Ö—Ä–µ—Å—Ç–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è',
            'tips': [
                '–°—Ç–≤–æ—Ä—ñ—Ç—å –ø–ª–µ–π–ª–∏—Å—Ç "Best of SmartBabies"',
                '–ü—ñ–Ω—ñ—Ç–µ –π–æ–≥–æ –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –∫–∞–Ω–∞–ª—É',
                '–î–æ–¥–∞–π—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ –æ–ø–∏—Å –∫–æ–∂–Ω–æ–≥–æ –≤—ñ–¥–µ–æ'
            ]
        },
        {
            'title': '4. –ö–æ–Ω—Ç–µ–Ω—Ç-—Å—Ç—Ä–∞—Ç–µ–≥—ñ—è',
            'tips': [
                '–†–µ–≥—É–ª—è—Ä–Ω—ñ—Å—Ç—å: 2-3 –≤—ñ–¥–µ–æ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å',
                '–°–µ—Ä—ñ–π–Ω—ñ—Å—Ç—å: —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Å–µ—Ä—ñ—ó (ABC Series, Numbers Series)',
                '–¢—Ä–µ–Ω–¥–∏: –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω—ñ —Ç—Ä–µ–Ω–¥–∏ –≤ –æ—Å–≤—ñ—Ç—ñ'
            ]
        },
        {
            'title': '5. –°–ø—ñ–≤–ø—Ä–∞—Ü—è —Ç–∞ –∫–æ–ª–∞–±–æ—Ä–∏',
            'tips': [
                '–°–ø—ñ–≤–ø—Ä–∞—Ü—è –∑ —ñ–Ω—à–∏–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏ –¥–ª—è –¥—ñ—Ç–µ–π',
                '–£—á–∞—Å—Ç—å –≤ YouTube Shorts',
                'Cross-promotion –≤ —Å–æ—Ü–º–µ—Ä–µ–∂–∞—Ö'
            ]
        },
        {
            'title': '6. –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –ø–µ—Ä—à–∏—Ö 48 –≥–æ–¥–∏–Ω',
            'tips': [
                '–ü—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ –≤ –æ–ø—Ç–∏–º–∞–ª—å–Ω–∏–π —á–∞—Å (–¥–ª—è –≤–∞—à–æ—ó –∞—É–¥–∏—Ç–æ—Ä—ñ—ó)',
                '–®–≤–∏–¥–∫–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –Ω–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ',
                '–ü–æ—à–∏—Ä—é–≤–∞—Ç–∏ –≤ —Å–æ—Ü–º–µ—Ä–µ–∂–∞—Ö –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó'
            ]
        }
    ]
    
    for strategy in strategies:
        print(f"\n{strategy['title']}:")
        for tip in strategy['tips']:
            print(f"  ‚Ä¢ {tip}")

def main():
    import argparse
    
    parser = argparse.ArgumentParser(description='–û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è YouTube –∫–∞–Ω–∞–ª—É')
    parser.add_argument('--apply', action='store_true', help='–ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –∑–º—ñ–Ω–∏')
    
    args = parser.parse_args()
    
    print("üîç –ê–ù–ê–õ–Ü–ó–£–Æ –ö–ê–ù–ê–õ SMARTBABIES...")
    
    youtube = None
    if args.apply:
        print("\nüîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è...")
        youtube = get_youtube_service()
        if not youtube:
            print("\n‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—è")
            print("üìù –ó–∞–ø—É—Å—Ç—ñ—Ç—å —Å–ø–æ—á–∞—Ç–∫—É: python3 auth_setup.py")
            return
    
    # –û—Ç—Ä–∏–º—É—î–º–æ API –∫–ª—é—á –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è
    api_key = os.getenv('YOUTUBE_API_KEY')
    if not api_key:
        print("‚ùå YOUTUBE_API_KEY –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return
    
    youtube_read = build('youtube', 'v3', developerKey=api_key)
    
    # –ê–Ω–∞–ª—ñ–∑ —Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    update_channel_metadata(youtube or youtube_read, preview_mode=not args.apply)
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó
    print_branding_recommendations()
    print_seo_recommendations()
    print_subscriber_growth_strategies()
    
    print("\n" + "="*70)
    print("‚úÖ –ê–ù–ê–õ–Ü–ó –ó–ê–í–ï–†–®–ï–ù–û")
    print("="*70)

if __name__ == '__main__':
    main()


